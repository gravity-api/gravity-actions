{
  "name": "ExecuteScript",
  "summary": "Executes JavaScript in the context of the currently selected frame or window.",
  "description": "Executes JavaScript in the context of the currently selected frame or window.",
  "testOn": "https://gravitymvctestapplication.azurewebsites.net/student",
  "examples": [
    {
      "description": "Trigger alert dialog window.",
      "literalExample": "execute script {alert('From ExecuteScript Action');}",
      "actionExample": {
        "actionType": "ExecuteScript",
        "argument": "alert('From ExecuteScript Action');"
      }
    },
    {
      "description": "Clicks on the first <a> element (JavaScript click, not web driver implemented click).",
      "literalExample": "execute script {arguments[0].click();} on {//a[1]}",
      "actionExample": {
        "actionType": "ExecuteScript",
        "argument": "arguments[0].click();",
        "elementToActOn": "//a[1]"
      }
    },
    {
      "description": "Sets an element attribute found on the page document by the given id (executes against the page).",
      "literalExample": "execute script {document.getElementById('SearchString').setAttribute('value','Carson');}",
      "actionExample": {
        "actionType": "ExecuteScript",
        "argument": "document.getElementById('SearchString').setAttribute('value','Carson');"
      }
    },
    {
      "description": "Scrolls a mobile page with [up] direction.",
      "literalExample": "execute script {{$ --src:mobile:scroll --args:[{'direction':'up'}]}}",
      "actionExample": {
        "actionType": "ExecuteScript",
        "argument": "{{$ --src:mobile:scroll --args:[{'direction':'up'}]}}"
      }
    },
    {
      "description": "Check the element under extraction. This action applies on current element when using extraction rules. This action assumes the element already found and will inject it into the script. For an instance, instead of document.findElementById('id').checked=true; you will provide only the part of the script after the '.' - .checked=true; because the element which is now under extraction was already found and will be injected into your code.",
      "literalExample": "No supported.",
      "actionExample": {
        "actionType": "ExecuteScript",
        "argument": ".checked=true;"
      }
    }
  ],
  "properties": {
    "elementToActOn": "The locator value by which the element will be found.",
    "locator": "The locator type by which the element will be found.",
    "argument": "The JavaScript code to execute."
  },
  "scope": [ "web", "mobile-web" ],
  "cliArguments": {
    "src": "The JavaScript code to execute.",
    "args": "Object array to pass into this script."
  },
  "protocol": {
    "endpoint": "/session/{session-id}/execute/sync",
    "w3c": "https://www.w3.org/TR/webdriver/#execute-script"
  }
}