{
  "cliArguments": {
    "until": {
      "description": "The element state condition to wait for.",
      "values": {
        "exists": "An expectation for checking that an element is present on the DOM of a page.",
        "visible": "An expectation for checking that an element is present on the DOM of a page and is visible.",
        "stale": "An expectation for checking the element to be stale.",
        "enabled": "An expectation for checking an element is visible and enabled such that you can click it.",
        "attribute": "An expectation for checking WebElement with given locator has attribute with a specific value.",
        "text": "An expectation for checking WebElement with given locator has specific text.",
        "hidden": "An expectation for checking the element to be invisible."
      }
    },
    "timeout": {
      "description": "Timeout to wait before throwing `TimeoutException`. The value can be a TimeSpan (`hh:mm:ss`) or in millisecond (`3000`). If not provided, the default will be `ElementSearchTimeout` property."
    }
  },
  "description": "Performs an explicit wait until the element conditions are met.",
  "examples": [
    {
      "description": "Wait for `//main/p/a` to be exist in the DOM or until `ElementSearchTimeout` reached.",
      "literalExample": "wait for element on {//main/p/a}",
      "actionExample": {
        "action": "WaitForElement",
        "onElement": "//main/p/a"
      }
    },
    {
      "description": "Wait for `//main/p/a` to be exist in the DOM and displayed or until `ElementSearchTimeout` reached.",
      "literalExample": "wait for element {{$ --until:visible}} on {//main/p/a}",
      "actionExample": {
        "action": "",
        "argument": "{{$ --until:visible}}",
        "onElement": "//main/p/a"
      }
    },
    {
      "description": "Wait for `//main/p/a` to be stale (StaleElementReferenceException is thrown) or until `5000ms` timeout reached.",
      "literalExample": "wait for element {{$ --until:stale --timeout:5000}} on {//main/p/a}",
      "actionExample": {
        "action": "WaitForElement",
        "argument": "{{$ --until:stale --timeout:5000}}",
        "onElement": "//main/p/a"
      }
    },
    {
      "description": "Wait for `//main/p/a` to be exist in the DOM, displayed and enabled or until `1min` timeout reached.",
      "literalExample": "wait for element {{$ --until:enabled --timeout:00:01:00}} on {//main/p/a}",
      "actionExample": {
        "action": "WaitForElement",
        "argument": "{{$ --until:enabled --timeout:00:01:00}}",
        "onElement": "//main/p/a"
      }
    },
    {
      "description": "Wait for `//main/p/a` to be exist in the DOM but not displayed or until `1min` timeout reached.",
      "literalExample": "wait for element {{$ --until:hidden --timeout:00:01:00}} on {//main/p/a}",
      "actionExample": {
        "action": "WaitForElement",
        "argument": "{{$ --until:hidden --timeout:00:01:00}}",
        "onElement": "//main/p/a"
      }
    },
    {
      "description": "Wait for `//main/p/a` to be exist in the DOM and it's `name` attribute to match `Create` or until `1min` timeout reached.",
      "literalExample": "wait for element {{$ --until:attribute --timeout:00:01:00}} on {//main/p/a}",
      "actionExample": {
        "action": "WaitForElement",
        "argument": "{{$ --until:attribute --timeout:00:01:00}}",
        "onElement": "//main/p/a",
        "onAttribute": "href",
        "regularExpression": "Create"
      }
    },
    {
      "description": "Wait for `//main/p/a` to be exist in the DOM and it's inner text to match `Create` or until `1min` timeout reached.",
      "literalExample": "wait for element {{$ --until:text --timeout:00:01:00}} on {//main/p/a}",
      "actionExample": {
        "action": "WaitForElement",
        "argument": "{{$ --until:text --timeout:00:01:00}}",
        "onElement": "//main/p/a",
        "regularExpression": "Create"
      }
    },
    {
      "description": "Wait for `//main/p/a` to not exists in the DOM (NoSuchElementException is thrown) or until `5000ms` timeout reached.",
      "literalExample": "wait for element {{$ --until:not_exists --timeout:5000}} on {//main/p/a}",
      "actionExample": {
        "action": "WaitForElement",
        "argument": "{{$ --until:not_exists --timeout:5000}}",
        "onElement": "//main/p/a"
      }
    }
  ],
  "name": "WaitForElement",
  "pluginType": "Action",
  "properties": {
    "argument": "The assertion condition, operator and expected value.",
    "locator": "The locator type by which the element will be found.",
    "onAttribute": "The element attribute from which to extract information for action execution. If not specified, information will be taken from the element inner text.",
    "onElement": "The locator value by which the element will be found.",
    "regularExpression": "A pattern by which the extracted information will be evaluated. Returns the first match."
  },
  "protocol": {
    "endpoint": "/session/{session id}/element",
    "w3c": "https://www.w3.org/TR/webdriver/#find-element"
  },
  "scope": [ "web", "mobile-web", "mobile-native" ],
  "summary": "Performs an explicit wait until the element conditions are met.",
  "testOn": "https://gravitymvctestapplication.azurewebsites.net/instructor"
}