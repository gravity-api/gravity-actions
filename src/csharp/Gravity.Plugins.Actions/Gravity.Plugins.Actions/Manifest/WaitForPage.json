{
  "cliArguments": {
    "until": "Page condition to meet. Available values [\"complete\", \"interactive\", \"loaded\", \"loading\", \"uninitialized\"].",
    "timeout": "Timeout to wait before throwing [TimeoutException], value can be TimeSpan [hh:mm:ss] or in millisecond [3000]. If not provided, default will be [PageLoadTimeout]."
  },
  "description": "Wait until the provided page state condition is met.",
  "examples": [
    {
      "description": "Wait for page ready state to be [complete] or until [PageLoadTimeout] reached.",
      "literalExample": "wait for page",
      "actionExample": {
        "action": "WaitForPage"
      }
    },
    {
      "description": "Wait for page ready state to be [interactive] or until [PageLoadTimeout] reached.",
      "literalExample": "wait for page {{$ --until:interactive}}",
      "actionExample": {
        "action": "WaitForPage",
        "argument": "{{$ --until:interactive}}"
      }
    },
    {
      "description": "Wait for page ready state to be [loaded] or until [PageLoadTimeout] reached.",
      "literalExample": "wait for page {{$ --until:loaded}}",
      "actionExample": {
        "action": "WaitForPage",
        "argument": "{{$ --until:loaded}}"
      }
    },
    {
      "description": "Wait for page ready state to be [loading] or until [00:00:03] reached.",
      "literalExample": "wait for page {{$ --until:loading --timeout:00:00:03}}",
      "actionExample": {
        "action": "WaitForPage",
        "argument": "{{$ --until:loading}}"
      }
    },
    {
      "description": "Wait for page ready state to be [uninitialized] or until [3000ms] reached.",
      "literalExample": "wait for page {{$ --until:uninitialized}}",
      "actionExample": {
        "action": "WaitForPage",
        "argument": "{{$ --until:uninitialized --timeout:3000}}"
      }
    }
  ],
  "name": "WaitForPage",
  "pluginType": "Action",
  "properties": {
    "argument": "The page primary conditions cli to meet. If not specified, will wait for the page [readyState] to be [complete] or until [PageLoadTimeout] reached."
  },
  "protocol": {
    "endpoint": "none",
    "w3c": "none"
  },
  "scope": [ "web", "mobile-web" ],
  "summary": "Wait until the provided page state condition is met.",
  "testOn": "https://gravitymvctestapplication.azurewebsites.net/instructor"
}